MR Regression

Importing Libaries
# Import the libaries
import pandas as pd
import numpy as np
from math import cos,sin,pi
import matplotlib as mpl
import matplotlib.pyplot as plt
import seaborn as sns
sns.set()
from sklearn.preprocessing import MinMaxScaler, StandardScaler
​
Adding Data
data_df = pd.read_csv("Belfast_City_Centre_2022.csv")
str(data_df)
data_df.dropna()
data_df.tail(6)
Date	Ozone	NO2	PM10	PM2.5	Temp	Humidity
263	24/12/2022	42	27	11	7	6.9	87.3
264	25/12/2022	58	14	9	5	7.3	86.1
265	26/12/2022	64	10	7	5	2.7	85.5
266	27/12/2022	40	30	12	8	5.7	90.3
267	30/12/2022	57	23	6	4	7.4	86.4
268	31/12/2022	26	41	12	9	4.5	96.1
Calculating Correlation between Pollutants
# Using Pearson Correlation to plot all correlations (positive and Negative) between all pollutants
plt.figure(figsize=(9,8))
cor = data_df.corr()
sns.heatmap(cor, annot=True, cmap=plt.cm.RdYlGn)
plt.show
<function matplotlib.pyplot.show(close=None, block=None)>

Selecting dependent variable and independent variables
data_df.head(6)
x=data_df.drop(['Date', 'NO2', 'PM2.5', 'Humidity'],axis=1).values
y=data_df['NO2'].values
​
print(x)
x.head(5)
[[60.  18.  11.5]
 [59.  13.   8.6]
 [61.  12.   6.5]
 [56.  10.   2.2]
 [35.  13.   3.1]
 [54.   8.   4.3]
 [48.  10.   1.9]
 [60.   9.   5.2]
 [54.  14.   4.6]
 [38.  11.   8.6]
 [30.  19.   5.1]
 [29.  19.   6.4]
 [27.  23.   6.2]
 [25.  18.   4.8]
 [ 4.  32.   5.7]
 [57.  18.   6.1]
 [19.  29.   3.4]
 [26.  24.   5.9]
 [60.  14.   6.9]
 [42.  19.   5.3]
 [44.  12.   5.6]
 [36.  11.   6.9]
 [54.  13.   6. ]
 [31.  41.   5.8]
 [27.  43.   5.5]
 [37.  17.   7.6]
 [57.  16.   8. ]
 [70.   6.   9.9]
 [49.  20.   9.4]
 [59.  11.   8.5]
 [64.  10.   3.1]
 [62.   8.   6.1]
 [70.  10.   5.3]
 [47.  13.   7.4]
 [52.  10.   8.1]
 [57.  16.   5. ]
 [56.  11.   3. ]
 [44.  15.   4. ]
 [59.   9.   8.2]
 [60.   7.   6.6]
 [61.   8.   5.4]
 [58.  15.   5.9]
 [67.  16.   9.6]
 [56.  11.   4.6]
 [65.   6.   3. ]
 [42.   9.   3.1]
 [78.   9.   7.3]
 [64.  25.   7.7]
 [65.  15.   7.4]
 [64.  13.   6.3]
 [56.   9.   2. ]
 [51.  14.   5.7]
 [73.  15.   8.4]
 [71.  24.   7.9]
 [44.  12.   6.5]
 [54.  15.   7.2]
 [56.  11.   4.9]
 [53.  13.   4.2]
 [32.  29.   3.3]
 [44.  22.   4. ]
 [65.  29.   5.6]
 [64.  14.   6.5]
 [54.  12.   6.3]
 [55.  14.   8.1]
 [58.  10.   6.8]
 [77.  12.   8.3]
 [55.  14.   6.7]
 [55.  12.   6.7]
 [58.  10.   5.9]
 [49.  18.   6.1]
 [36.  26.   7. ]
 [61.  22.   9.7]
 [57.  24.   7.6]
 [46.  40.   8. ]
 [33.  54.  10.9]
 [43.  51.  10.8]
 [39.  41.  11. ]
 [16.  54.  10. ]
 [22.  58.  10. ]
 [38.  38.  10.1]
 [23.  32.   9. ]
 [21.  35.   8.8]
 [53.  15.   5.5]
 [67.  10.   4.4]
 [61.   8.   3.8]
 [57.   8.   5.8]
 [52.  11.   6. ]
 [62.   3.  10.4]
 [70.   9.   6.5]
 [66.  12.   4.6]
 [62.  10.   5.3]
 [39.  27.   9. ]
 [39.  18.  11.2]
 [63.   9.  12.1]
 [52.  11.  12.5]
 [56.   8.  13.7]
 [56.   6.  11.5]
 [57.   7.  11.5]
 [58.   8.  12.5]
 [62.  12.  12.5]
 [66.  14.  11.6]
 [58.  11.  12.2]
 [57.   9.  11.3]
 [61.   9.  10.5]
 [43.   7.  10.4]
 [58.   7.  12.8]
 [54.  13.  12.7]
 [60.  13.  13.4]
 [54.  13.  13. ]
 [65.  10.  12.9]
 [43.  12.  13.8]
 [58.  11.  14.5]
 [56.   9.  14.7]
 [45.  15.  14.7]
 [54.  17.  15.9]
 [63.  12.  14.5]
 [65.   9.  13. ]
 [50.  15.  13.6]
 [48.  14.  14.3]
 [58.  14.  16.4]
 [52.  13.  16.5]
 [49.  11.  15.8]
 [52.  15.  13.6]
 [55.  15.  13.7]
 [47.  17.  15. ]
 [27.  10.  15. ]
 [30.  12.  15. ]
 [38.  15.  17.7]
 [58.  13.  16.1]
 [62.  10.  14.1]
 [52.   7.  13.6]
 [48.  10.  13.9]
 [50.  13.  14.2]
 [31.  10.  14.5]
 [24.  11.  14.1]
 [41.   7.  14.5]
 [41.   6.  14.9]
 [49.   5.  14.7]
 [49.   8.  14.3]
 [32.   9.  15. ]
 [31.  10.  16.3]
 [37.   8.  16.3]
 [30.   7.  16.9]
 [30.   5.  16.5]
 [12.   8.  17.1]
 [50.  14.  19. ]
 [49.  15.  17.6]
 [41.  10.  15.7]
 [32.  10.  15.5]
 [41.   7.  16.1]
 [42.  10.  16.6]
 [64.  14.  19.2]
 [88.  19.  22.3]
 [43.  10.  15.3]
 [26.  11.  15.2]
 [32.   8.  16.5]
 [39.   8.  18.7]
 [43.  11.  16.1]
 [26.   6.  17.2]
 [48.   6.  16. ]
 [33.   8.  15.9]
 [35.   8.  20.2]
 [44.  10.  16.3]
 [48.  10.  14.7]
 [40.  13.  14. ]
 [42.  10.  15.6]
 [37.  15.  16.2]
 [41.  14.  17.6]
 [42.  14.  20. ]
 [28.  14.  19.9]
 [55.  18.  20.2]
 [50.  16.  19.4]
 [52.  11.  17.1]
 [51.  13.  15.4]
 [38.  11.  14.4]
 [38.  11.  16.6]
 [37.  14.  15.7]
 [41.   9.  15.5]
 [46.   8.  15.2]
 [29.   7.  16.3]
 [31.   8.  18.5]
 [39.  11.  17.1]
 [40.  14.  15.7]
 [41.   9.  17.4]
 [30.   9.  15.8]
 [44.   9.  14.9]
 [40.  12.  16. ]
 [53.  17.  16.3]
 [64.  11.  14.8]
 [64.   7.  16.6]
 [60.  14.  17.6]
 [59.  13.  16.8]
 [48.  12.  16.1]
 [38.  10.  16.3]
 [44.  11.  16.3]
 [44.   9.  15.2]
 [35.   7.  15.1]
 [50.   7.  15.8]
 [58.  13.  14.9]
 [56.   7.  14.1]
 [51.   9.  13.4]
 [54.   9.  12.4]
 [48.   7.  12.3]
 [48.   4.  13.2]
 [47.  10.  15. ]
 [43.  18.  15.8]
 [48.  15.  16.4]
 [45.   9.  15. ]
 [52.   7.  12.4]
 [42.   8.  12. ]
 [55.  20.  11.8]
 [53.  16.  10.9]
 [43.   7.  11.5]
 [39.  11.  13.4]
 [34.  10.  10.3]
 [47.   7.   8.8]
 [48.   9.   9.3]
 [53.  11.  12.3]
 [27.  16.   9.6]
 [45.  14.  11.2]
 [39.  11.  10.2]
 [55.   8.  15. ]
 [49.   8.  15.8]
 [49.  14.  13.6]
 [44.  21.  14.5]
 [40.  12.  11.8]
 [38.  18.   8.6]
 [33.  11.   7.5]
 [39.  11.   5.8]
 [36.  12.   6.1]
 [43.  13.   7.7]
 [28.  13.   8. ]
 [51.   9.   7.7]
 [61.  14.   8.5]
 [31.  17.   8.1]
 [63.  12.  12.3]
 [60.  17.   9.6]
 [19.  23.   5.7]
 [10.  18.   5.7]
 [24.  17.   8.7]
 [29.  13.   9.8]
 [10.  23.   8.8]
 [23.  13.   7.4]
 [39.   9.   6.1]
 [41.   8.   6.8]
 [26.  10.   4.5]
 [39.  11.   3.6]
 [30.  18.   2.4]
 [12.  22.   0. ]
 [25.  14.   1.2]
 [21.  18.   2.1]
 [ 3.  34.  -1.2]
 [ 3.  29.  -0.5]
 [30.  12.   1.7]
 [24.  20.   1. ]
 [26.  20.   0.9]
 [31.  24.   1.6]
 [43.  17.   5.8]
 [58.  12.  11.1]
 [56.  18.   6.8]
 [48.  14.   7. ]
 [26.  16.   5.8]
 [24.  16.   6. ]
 [42.  11.   6.9]
 [58.   9.   7.3]
 [64.   7.   2.7]
 [40.  12.   5.7]
 [57.   6.   7.4]
 [26.  12.   4.5]]
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
Input In [7], in <cell line: 2>()
      1 print(x)
----> 2 x.head(5)

AttributeError: 'numpy.ndarray' object has no attribute 'head'

print(y[0:5])
[ 9 12 12 15 34]
Splitting the dataset in training set and test set
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2, random_state=0)
Training the model
from sklearn.linear_model import LinearRegression
ml=LinearRegression()
ml.fit(x_train,y_train)
LinearRegression()
Predicting the test set results
y_pred=ml.predict(x_test)
print(y_pred)
[33.91668537 23.91802404 39.09272567 16.7874349  19.5323463   7.51044845
 20.72939728 19.33494926 21.69010095 21.76154828 15.43010176 42.2837053
 14.40062573 11.0297245  14.28294186 34.22534235 14.43956949 18.63386084
 14.95837695 15.63339549 17.47436079 26.12256198 20.30713074 31.89668033
 15.11823606 40.55219057 21.20197143 51.58441525 15.70667821 28.46580957
 15.36229269 19.56807159 17.7216424  14.9648269  25.36235336 -4.98723226
 13.39817637 10.65283867  5.08748445 10.09186573 12.94942341 17.22567334
 27.49222226 20.94964897 17.60073354 24.32236608 37.88611371 15.74057787
  9.04501196 13.61757872 12.06971829 18.22671686 20.01038761 23.57547065]
ml.predict([[60,18,11.5]])
array([15.97638168])
Evaluating the model
from sklearn.metrics import r2_score
print("R2",r2_score(y_test,y_pred))
R2 0.6240339280676007
plt.figure(figsize=(8,5))
plt.scatter(y_test,y_pred)
plt.xlabel('Actual')
plt.ylabel('Predicted')
plt.title('Actual vs Predicted')
​
​
Text(0.5, 1.0, 'Actual vs Predicted')

pred_y_df=pd.DataFrame({'Actual; Value NO2':y_test, 'Predicted value NO2':y_pred, 'Difference': y_test-y_pred})
pred_y_df[0:5]
Actual; Value NO2	Predicted value NO2	Difference
0	39	33.916685	5.083315
1	28	23.918024	4.081976
2	33	39.092726	-6.092726
3	17	16.787435	0.212565
4	23	19.532346	3.467654
Adding Regreession line
m,b = np.polyfit(y_test,y_pred,1)
print(m)
print(b)
0.8423692616951679
2.1397391366388354
plt.figure(figsize=(10,7))
plt.scatter(y_test,y_pred)
plt.xlabel('Actual (V µg/m³)')
plt.ylabel('Predicted (V µg/m³)')
plt.plot(y_test, m*y_test+b, 'orange')
plt.title('Actual vs Predicted levels of NO2 in Belfast City Centre 2022')
Text(0.5, 1.0, 'Actual vs Predicted levels of NO2 in Belfast City Centre 2022')
